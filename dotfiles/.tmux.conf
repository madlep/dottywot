# use mouse for pane selection/scrolling
set-option -g mouse on
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'copy-mode -e'"

set -g default-terminal "screen-256color"

# remap prefix to Control + a
set -g prefix C-a
unbind C-b
bind-key a send-prefix

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi C-\\ select-pane -l

# vim copy/paste
unbind [
bind Escape copy-mode
unbind p
bind p paste-buffer
# from https://github.com/tmux/tmux/issues/592#issuecomment-260541974
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy"

# use - and | for splitting
unbind-key "\""
unbind-key %
bind-key - split-window -c "#{pane_current_path}"
bind-key _ split-window -c "#{pane_current_path}"

bind-key | split-window -h -c "#{pane_current_path}"


# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf

# quick pane cycling
# unbind ^A
# bind ^A select-pane -t :.+

# copy + paste
set-option -g default-command "reattach-to-user-namespace -l zsh"
bind-key Y run-shell "tmux save-buffer - | reattach-to-user-namespace pbcopy"

# clear pane
bind-key b send-keys -R \; clear-history

# use vi-style key bindings in the status line
set -g status-keys vi

# amount of time for which status line messages and other indicators
# are displayed. time is in milliseconds.
set -g display-time 2000


set -g status-interval 1
set -g status-justify centre
set -g status-left-length 20
setw -g window-status-style dim


# don't rename window to running command
set-option -g allow-rename off

set -g display-panes-time 2000

# start window numbers at 1
set -g base-index 1

# right status message
set-option -g status-right "#[fg=black,bg=default]%a%l:%M:%S %p#[default] #[fg=blue]%Y-%m-%d"

#### COLOUR (Solarized light)

# default statusbar colors
set-option -g status-bg white #base2
set-option -g status-fg yellow #yellow
set-option -g status-style default

# default window title colors
set-window-option -g window-status-style fg=brightyellow,bg=default,dim

# active window title colors
set-window-option -g window-status-current-style fg=brightred,bg=default,bright

# pane border
set-option -g pane-border-style fg=white
set-option -g pane-active-border-style fg=brightcyan

# message text
set-option -g message-style bg=white,fg=brightred

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

# bell
set-window-option -g window-status-bell-style fg=white,bg=red #base2, red
